# Use <CTRL>+a as command prefix
set -g prefix C-a

# Keep all sessions
set-option -g destroy-unattached off

# Number from 1 for easier key bindings
set -g base-index 1
setw -g pane-base-index 1

# Don't listen for extended escape sequences
set -s escape-time 0

# Status bar stuff
set -g status-bg black
set -g status-fg white
set -g status-left "#[fg=yellow]#S"
set -g status-right "#[fg=$hostcolor]#H"
setw -g window-status-current-bg blue

# Visual alert to activity in other pane
set -g visual-activity on
setw -g monitor-activity on

# Auto-scroll mode in xterms
set -g xterm-keys on
set -g history-limit 100000
set -g mode-mouse on
set -g mouse-resize-pane on
set -g mouse-select-pane on
set -g mouse-select-window on

# Allow naming panes by term codes
setw -g automatic-rename on
set -g set-titles on

# Let different clients have different sizes
setw -g aggressive-resize on

# For nested tmux'es
bind a send-prefix

# Shortcut for last window
bind C-a last-window

unbind n
unbind c
unbind C-c
bind n new-window -c "#{pane_current_path}"
bind c new-session
bind C-c new-session -t '#S'

bind r command-prompt 'rename-session %%'

# Send keys to all panes in paralles
bind e setw synchronize-panes on
bind E setw synchronize-panes off

setw -g mode-keys vi
unbind [
bind Escape copy-mode
bind -t vi-copy v begin-selection
bind -t vi-copy V rectangle-toggle
bind -t vi-copy y copy-pipe "xclip -selection clipboard -in"
unbind p
bind p run "tmux set-buffer \"$(xclip -selection clipboard -out)\" ; tmux paste-buffer"

bind v split-window -h -c "#{pane_current_path}"
bind h split-window -v -c "#{pane_current_path}"

bind J resize-pane -D 5
bind K resize-pane -U 5
bind H resize-pane -L 5
bind L resize-pane -R 5

#bind M-j resize-pane -D
#bind M-k resize-pane -U
#bind M-h resize-pane -L
#bind M-l resize-pane -R

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

#bind -n M-h select-pane -L
#bind -n M-j select-pane -D
#bind -n M-k select-pane -U
#bind -n M-l select-pane -R

#bind -n C-h select-pane -L
#bind -n C-l select-pane -R
#bind -n C-Up select-pane -U
#bind -n C-Down select-pane -D

bind -n C-p previous-window
bind -n C-n next-window

# Smart pane switching with awareness of vim splits ala http://robots.thoughtbot.com/seamlessly-navigate-vim-and-tmux-splits
# original concept from Mislav MarohniÄ‡, https://gist.github.com/mislav/5189704
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# Predefined sessions
new-session -s system
